services:
  web:
    build: .
    command: python /app/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
  db:
    # container_name: postgresdb
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=${DJANGO_DB_USER}
      - POSTGRES_PASSWORD=${DJANGO_DB_PASS}
      - POSTGRES_DB=${DJANGO_DB_NAME}
      
    ports: 
      - "5432:5432" 

    

  redis:
      image: redis
      ports:
        - "6379:6379"
      volumes:
        - ./redis.conf:/usr/local/etc/redis/redis.conf
      command: redis-server /usr/local/etc/redis/redis.conf
      restart: always


  worker:
      build:
        context: .
        dockerfile: Dockerfile
      # image: madefire/chordtest
      command: ['celery','-A', 'config', 'worker', '--loglevel', 'info']
      # environment:
      #   - BROKER_URL=redis://redis:6379/0
      #   - RESULT_BACKEND=redis://redis:6379/0
      #   - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
      #   - C_FORCE_ROOT=true

      depends_on:
        - redis

      restart: always

  ollama:
    image: ollama/ollama  # Replace with the actual Ollama image name or configuration
    ports:
      - "11435:11435"  # Make sure this matches the port Ollama is using
    restart: always

volumes:
      postgres_data: